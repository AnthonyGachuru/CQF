x1 <- x[1]
x2 <- x[2]
c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1),
200 *      (x2 - x1 * x1))
}
optim(c(-1.2,1), fr)
vit.fit.dse.likelihood <- function(f=0.1,q=0.1,h=1,r=0.3,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(cbind(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.1,q=0.1,h=1,r=0.3,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.1,h=1,r=0.3,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.1,h=1,r=0.3,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse = dse::SS(F = matrix(-0.06896509, 1, 1),
Q = matrix(0.1783604, 1, 1),
H = matrix(1, 1, 1),
R = matrix(0, 1, 1),
G = matrix(0.4445145, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
k = (1-vit.m.fit.dse$model$F)*12
mu = (vit.m.fit.dse$model$G/k)*12
sigma_y = vit.m.fit.dse$model$Q * sqrt(12)
k
mu
sigma_y
vit.fit.dse.likelihood <- function(f=0.5,q=0.1,h=1,r=0,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.1,h=1,r=0,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),-vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.1,h=1,r=0,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = -vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.1,0.1,0.1,0,0.1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.5,0.5,0.5,0,1),vit.fit.dse.likelihood)
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
f=0.5,q=0.5,h=1,r=0,g=0.5
f=0.5;q=0.5;h=1;r=0;g=0.5
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
results
as.numeric(results)
vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.5,0.5,0.5,0,1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(-0.5,0.5,0.5,0,1),vit.fit.dse.likelihood)
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
# load in data, daily/monthly
vix_indeX_monthly = read.csv("vix_d.csv")
vix_index_daily = read.csv("vix_m.csv")
log.vix.m = log(vix_indeX_monthly[,2])
log.vix.d = log(vix_index_daily[,2])
#vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.likelihood <- function(f,q,h,r,g){
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(0.2,0.5,1,0,1,vit.fit.dse.likelihood)
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
vit.fit.dse.likelihood <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
h = in_arg[3]
r = in_arg[4]
g = in_arg[5]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
library(dse)
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
(1-0.24787181)*12
#vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.likelihood <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
#h = in_arg[3]
#r = in_arg[4]
g = in_arg[3]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(0.2,0.5,1),vit.fit.dse.likelihood)
#vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.likelihood <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
#h = in_arg[3]
#r = in_arg[4]
g = in_arg[3]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(1, 1, 1),
R = matrix(0, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(0.2,0.5,1),vit.fit.dse.likelihood)
(1-0.18333)*12
#vit.fit.dse.likelihood <- function(f=0.5,q=0.5,h=1,r=0,g=0.5){
vit.fit.dse.likelihood <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
h = in_arg[3]
r = in_arg[4]
g = in_arg[5]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
output.model1 = optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood)
k = (1-output.model1$PARS[1])*12
mu = (output.model1$PARS[5]/k)*12
sigma_y = output.model1$PARS[3] * sqrt(12)
k
mu
sigma_y
k = (1-output.model1$par[1])*12
mu = (output.model1$par[5]/k)*12
sigma_y = output.model1$par[3] * sqrt(12)
k
mu
sigma_y
vit.fit.dse.likelihood.model2 <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
h = in_arg[3]
r = in_arg[4]
g = in_arg[5]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
#constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
# univariate model 2
output.model2 = optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood.model2)
k = (1-output.model2$par[1])*12
mu = (output.model2$par[5]/k)*12
sigma_y = output.model2$par[3] * sqrt(12)
k
mu
sigma_y
f <- array(c(.2,0,.8,.6),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,.05),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(1,0,0,1),c(2,2))
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G=g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = rep(1,length(log.vix.m)),output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
vit.fit.dse.likelihood.model2 <- function(in_arg){
f = in_arg[1]
q = in_arg[2]
h = in_arg[3]
r = in_arg[4]
g = in_arg[5]
vit.fit.dse.local = dse::SS(F = matrix(f, 1, 1),
Q = matrix(q, 1, 1),
H = matrix(h, 1, 1),
R = matrix(r, 1, 1),
G = matrix(g, 1, 1),       # k_y * mu_y * dt
#constants = list(R = matrix(TRUE, 1, 1),H = matrix(TRUE, 1, 1)),
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse <- estMaxLik(vit.fit.dse.local, TSdata(input = rep(1,length(log.vix.m)), output = log.vix.m))
#vit.m.fit.dse$model
results = vit.m.fit.dse$estimates$results$value
return(results)
}
# univariate model 2
output.model2 = optim(c(0.2,0.5,1,0,1),vit.fit.dse.likelihood.model2)
k = (1-output.model2$par[1])*12
mu = (output.model2$par[5]/k)*12
sigma_y = output.model2$par[3] * sqrt(12)
k
mu
sigma_y
f <- array(c(.2,0,.8,.6),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,.05),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(1,0,0,1),c(2,2))
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G=g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = rep(1,length(log.vix.m)),output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
# two factor model
f <- array(c(.2,0,.8,.6),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,.05),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(1,0,0,1),c(2,2))
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G=g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
# two factor model
f <- array(c(.2,0,.8,.6),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,.05),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(1,0,0,1),c(2,2))
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G = g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = cbind(rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
vit.m.fit.dse.2factor$model
# two factor model
f <- array(c(.2,0,.8,.6),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,.05),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(0.5,0,0,0.5),c(2,2))
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G = g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = cbind(rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
vit.fit.dse.2factor = dse::SS(F = f, Q = q,
H = h, R = r, G = g)
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = cbind(rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor, TSdata(input = cbind(rep(1,length(log.vix.m)),rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
vit.m.fit.dse.2factor$model
a$b = 1
?list
?input
vit.fit.dse.likelihood.model3 <- function(in_arg){
vit.fit.dse.2factor.local = dse::SS(F = in_arg$f,
Q = in_arg$q,
H = in_arg$h,
R = in_arg$r,
G = in_arg$g,
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor.local,
TSdata(input = cbind(rep(1,length(log.vix.m)),rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
results = vit.m.fit.dse.2factor$estimates$results$value
return(results)
}
mF <- array(c(.2,0,.8,.6),c(2,2))
H <- array(c(1,0,0,1),c(2,2))
Q <- array(c(.1,0,0,.05),c(2,2))
R <- array(c(1,0,0,1),c(2,2))
G <- array(c(0.5,0,0,0.5),c(2,2))
input = list(f = mF, h = H, q = Q, r = R, g = G)
output.model1 = optim(input, vit.fit.dse.likelihood)
c(mF,H)
input
input$f
mF
input = list(f = mF, h = H, q = Q, r = R, g = G)
output.model3 = optim(input, vit.fit.dse.likelihood.model3)
vit.fit.dse.likelihood.model3 <- function(in_arg){
vit.fit.dse.2factor.local = dse::SS(F = in_arg$f,
Q = in_arg$q,
H = in_arg$h,
R = in_arg$r,
G = in_arg$g,
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor.local,
TSdata(input = cbind(rep(1,length(log.vix.m)),rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
results = vit.m.fit.dse.2factor$estimates$results$value
return(results)
}
output.model3 = optim(input, vit.fit.dse.likelihood.model3)
vit.fit.dse.likelihood.model3(input)
in_arg = c(.2,.8,.6,.05,0.5,0.5)
output.model3 =  optim(input, vit.fit.dse.likelihood.model3)
vit.fit.dse.likelihood.model3 <- function(in_arg){
f <- array(c(in_arg[1],0,in_arg[2],in_arg[3]),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,in_arg[4]),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(in_arg[5],0,0,in_arg[6]),c(2,2))
vit.fit.dse.2factor.local = dse::SS(F = in_arg$f,
Q = in_arg$q,
H = in_arg$h,
R = in_arg$r,
G = in_arg$g,
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor.local,
TSdata(input = cbind(rep(1,length(log.vix.m)),rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
results = vit.m.fit.dse.2factor$estimates$results$value
return(results)
}
output.model3 =  optim(input, vit.fit.dse.likelihood.model3)
output.model3 =  optim(in_arg, vit.fit.dse.likelihood.model3)
vit.fit.dse.likelihood.model3 <- function(in_arg){
f <- array(c(in_arg[1],0,in_arg[2],in_arg[3]),c(2,2))
h <- array(c(1,0,0,1),c(2,2))
q <- array(c(.1,0,0,in_arg[4]),c(2,2))
r <- array(c(1,0,0,1),c(2,2))
g <- array(c(in_arg[5],0,0,in_arg[6]),c(2,2))
vit.fit.dse.2factor.local = dse::SS(F = f,
Q = q,
H = h,
R = r,
G = g,
z0 = matrix(0, 1, 1), P0 = matrix(10^5, 1, 1))
vit.m.fit.dse.2factor <- estMaxLik(vit.fit.dse.2factor.local,
TSdata(input = cbind(rep(1,length(log.vix.m)),rep(1,length(log.vix.m))), output = cbind(log.vix.m,log.vix.m)))
results = vit.m.fit.dse.2factor$estimates$results$value
return(results)
}
in_arg = c(.2,.8,.6,.05,0.5,0.5)
output.model3 =  optim(in_arg, vit.fit.dse.likelihood.model3)
in_arg = c(.2,.8,.6,.05,0.5,0.5)
output.model3 =  optim(in_arg, vit.fit.dse.likelihood.model3)
